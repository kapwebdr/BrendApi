events {
    worker_connections 1024;
}

http {
    # Configuration commune
    proxy_http_version 1.1;
    proxy_set_header Connection '';
    proxy_buffering off;
    proxy_cache off;

    # Configuration pour le streaming
    # proxy_request_buffering off;
    # chunked_transfer_encoding on;
    # tcp_nodelay on;
    # tcp_nopush off;

    # Augmentation des limites de taille
    client_max_body_size 100M;
    client_body_buffer_size 100M;
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;

    # Configuration MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Ajout du resolver pour la résolution DNS dynamique
    resolver 127.0.0.11 valid=30s ipv6=off;

    # Définition des variables pour les upstreams
    map $uri $service_port {
        ~^/v1/ai/models       "llm:8000";
        ~^/v1/ai/image        "image:8000";
        ~^/v1/ai/translation  "translation:8000";
        ~^/v1/ai/speech       "speech:8000";
        ~^/v1/ai/media        "media:8000";
        ~^/v1/ai/chaining     "chaining:8000";
        ~^/v1/files           "files:8000";
        ~^/v1/monitor         "monitor:8000";
        ~^/v1/history         "storage:8000";
        ~^/v1/storage         "storage:8000";
        default               "llm:8000";
    }

    # Définition des upstreams
    upstream chaining_service {
        server chaining:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;

        # Headers communs pour les proxys
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Origin $http_origin;

        # Configuration de la tolérance aux pannes
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 20s;

        # Configuration CORS globale dans un bloc location
        location / {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Expose-Headers' '*' always;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Ajout d'un timeout plus court pour la résolution DNS
        resolver_timeout 5s;

        # Configuration générique pour tous les services
        location /v1/ {
            set $target_service "http://$service_port";

            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;

            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;

            error_page 500 502 503 504 = @service_error;
        }

        # LLM Service Endpoints
        location ~ ^/v1/ai/(models|load_model|generate|session|stop) {
            set $target_service "http://llm:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 800s;
            proxy_send_timeout 800s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Image Service Endpoints
        location ~ ^/v1/ai/image/(models|generate|refine|analyze|ocr) {
            set $target_service "http://image:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Translation Service Endpoints
        location ~ ^/v1/ai/translation/(languages|translate) {
            set $target_service "http://translation:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Speech Service Endpoints
        location ~ ^/v1/ai/speech/(models|text-to-speech|speech-to-text) {
            set $target_service "http://speech:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Media Service Endpoints
        location ~ ^/v1/ai/media/url/(analyze|extract|stream) {
            set $target_service "http://media:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Monitor Service Endpoints
        location ~ ^/v1/monitor/(system/stats|containers|containers/.*) {
            set $target_service "http://monitor:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Ready Check Endpoints
        location ~ ^/v1/.*/ready {
            set $target_service "http://$service_port";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Chaining Service Endpoints
        location ~ ^/v1/ai/chaining/(chat) {
            set $target_service "http://chaining:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Files Service Endpoints
        location ~ ^/v1/files(/directory)?(/[^/]+)? {
            client_max_body_size 100M;
            proxy_pass http://files:8000;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            
            # Configuration spécifique pour le streaming et les téléchargements
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }

        #Storage Service Endpoints
        location ~ ^/v1/storage/(set|get|delete|list|search|collections|databases)(/[^/]+)? {
            set $target_service "http://storage:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # History Endpoints
        location ~ ^/v1/history/(conversation|messages|search) {
            set $target_service "http://storage:8000";
            proxy_pass $target_service;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 0;
            proxy_connect_timeout 20s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            include /etc/nginx/cors.conf;
            error_page 500 502 503 504 = @service_error;
        }

        # Page d'erreur générique pour les services
        location @service_error {
            default_type application/json;
            return 503 '{"error": "Service temporarily unavailable", "status": 503, "path": "$request_uri"}';
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status": "healthy"}';
            default_type application/json;
        }
    }
} 